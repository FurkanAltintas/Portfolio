// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Portfolio.DataAccess.Concrete.EntityFramework.Contexts;

#nullable disable

namespace Portfolio.DataAccess.Migrations
{
    [DbContext(typeof(PortfolioContext))]
    [Migration("20230926205714_initial-create")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Portfolio.Entities.Concrete.About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Abouts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 26, 23, 57, 13, 938, DateTimeKind.Local).AddTicks(498),
                            Description = "Ben Furkan Altıntaş. Düzce Üniversitesi Mezunuyum.",
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Ben Kimim ?"
                        });
                });

            modelBuilder.Entity("Portfolio.Entities.Concrete.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Contacts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 26, 23, 57, 13, 938, DateTimeKind.Local).AddTicks(2905),
                            Email = "berketest@gmail.com",
                            FullName = "Berke Altıntaş",
                            IsActive = true,
                            IsDeleted = false,
                            Message = "Bu bir deneme mesajıdır",
                            Phone = "+90 555 555 55 55",
                            Subject = "Deneme"
                        });
                });

            modelBuilder.Entity("Portfolio.Entities.Concrete.Introduce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ExperienceContent")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("ExperiencePeriod")
                        .HasColumnType("smallint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ProjectContent")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("ProjectCount")
                        .HasColumnType("smallint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Introduces", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 26, 23, 57, 13, 938, DateTimeKind.Local).AddTicks(5044),
                            Description = "And I'm sick of waiting patiently for someone that won't even arrive",
                            ExperienceContent = "Yazılım Tecrübesi",
                            ExperiencePeriod = (short)0,
                            IsActive = true,
                            IsDeleted = false,
                            ProjectContent = "Toplam Proje Sayısı (GitHub)",
                            ProjectCount = (short)0,
                            Title = "Merhaba ben Furkan"
                        });
                });

            modelBuilder.Entity("Portfolio.Entities.Concrete.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ComponentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHeaderActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsIconActive")
                        .HasColumnType("bit");

                    b.Property<short>("Queue")
                        .HasColumnType("smallint");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Menus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ComponentName = "Introduce",
                            CreatedDate = new DateTime(2023, 9, 26, 23, 57, 13, 938, DateTimeKind.Local).AddTicks(7173),
                            Header = "Introduce",
                            IconName = "las la-home",
                            IsActive = true,
                            IsDeleted = false,
                            IsHeaderActive = false,
                            IsIconActive = false,
                            Queue = (short)1,
                            Slug = "home"
                        },
                        new
                        {
                            Id = 2,
                            ComponentName = "About",
                            CreatedDate = new DateTime(2023, 9, 26, 23, 57, 13, 938, DateTimeKind.Local).AddTicks(7175),
                            Header = "About",
                            IconName = "lar la-user",
                            IsActive = true,
                            IsDeleted = false,
                            IsHeaderActive = false,
                            IsIconActive = false,
                            Queue = (short)2,
                            Slug = "about"
                        },
                        new
                        {
                            Id = 3,
                            ComponentName = "Resume",
                            CreatedDate = new DateTime(2023, 9, 26, 23, 57, 13, 938, DateTimeKind.Local).AddTicks(7177),
                            Header = "Resume",
                            IconName = "las la-briefcase",
                            IsActive = true,
                            IsDeleted = false,
                            IsHeaderActive = false,
                            IsIconActive = false,
                            Queue = (short)3,
                            Slug = "resume"
                        },
                        new
                        {
                            Id = 4,
                            ComponentName = "Service",
                            CreatedDate = new DateTime(2023, 9, 26, 23, 57, 13, 938, DateTimeKind.Local).AddTicks(7180),
                            Header = "Services",
                            IconName = "las la-stream",
                            IsActive = true,
                            IsDeleted = false,
                            IsHeaderActive = false,
                            IsIconActive = false,
                            Queue = (short)4,
                            Slug = "services"
                        },
                        new
                        {
                            Id = 5,
                            ComponentName = "Skill",
                            CreatedDate = new DateTime(2023, 9, 26, 23, 57, 13, 938, DateTimeKind.Local).AddTicks(7181),
                            Header = "My Skills",
                            IconName = "las la-shapes",
                            IsActive = true,
                            IsDeleted = false,
                            IsHeaderActive = false,
                            IsIconActive = false,
                            Queue = (short)5,
                            Slug = "skills"
                        },
                        new
                        {
                            Id = 6,
                            ComponentName = "Portfolio",
                            CreatedDate = new DateTime(2023, 9, 26, 23, 57, 13, 938, DateTimeKind.Local).AddTicks(7183),
                            Header = "Portfolio",
                            IconName = "las la-grip-vertical",
                            IsActive = true,
                            IsDeleted = false,
                            IsHeaderActive = false,
                            IsIconActive = false,
                            Queue = (short)6,
                            Slug = "portfolio"
                        },
                        new
                        {
                            Id = 7,
                            ComponentName = "Testimonial",
                            CreatedDate = new DateTime(2023, 9, 26, 23, 57, 13, 938, DateTimeKind.Local).AddTicks(7185),
                            Header = "Testimonial",
                            IconName = "lar la-comment",
                            IsActive = true,
                            IsDeleted = false,
                            IsHeaderActive = false,
                            IsIconActive = false,
                            Queue = (short)7,
                            Slug = "testimonial"
                        },
                        new
                        {
                            Id = 8,
                            ComponentName = "Contact",
                            CreatedDate = new DateTime(2023, 9, 26, 23, 57, 13, 938, DateTimeKind.Local).AddTicks(7187),
                            Header = "Contact",
                            IconName = "las la-envelope",
                            IsActive = true,
                            IsDeleted = false,
                            IsHeaderActive = false,
                            IsIconActive = false,
                            Queue = (short)8,
                            Slug = "contact"
                        });
                });

            modelBuilder.Entity("Portfolio.Entities.Concrete.MenuHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuHeaders", (string)null);
                });

            modelBuilder.Entity("Portfolio.Entities.Concrete.Resume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateRange")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("SubTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Resumes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 26, 23, 57, 13, 939, DateTimeKind.Local).AddTicks(1970),
                            DateRange = "2019 - 2021",
                            IsActive = true,
                            IsDeleted = false,
                            SubTitle = "Düzce Üniversitesi",
                            Title = "Bilgisayar Programcılığı"
                        });
                });

            modelBuilder.Entity("Portfolio.Entities.Concrete.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("Point")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Skills", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 26, 23, 57, 13, 939, DateTimeKind.Local).AddTicks(3965),
                            IconName = "...",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Net Core",
                            Point = (short)60
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 9, 26, 23, 57, 13, 939, DateTimeKind.Local).AddTicks(3968),
                            IconName = "...",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Wordpress",
                            Point = (short)45
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 9, 26, 23, 57, 13, 939, DateTimeKind.Local).AddTicks(3970),
                            IconName = "...",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Angular",
                            Point = (short)35
                        });
                });

            modelBuilder.Entity("Portfolio.Entities.Concrete.SocialMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SocialMedias", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 26, 23, 57, 13, 939, DateTimeKind.Local).AddTicks(6123),
                            IconName = "lab la-github",
                            IsActive = true,
                            IsDeleted = false,
                            Link = "https://github.com/FurkanAltintas",
                            Name = "GitHub"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 9, 26, 23, 57, 13, 939, DateTimeKind.Local).AddTicks(6125),
                            IconName = "lab la-linkedin",
                            IsActive = false,
                            IsDeleted = false,
                            Link = "https://www.linkedin.com/in/furkanaltintas/",
                            Name = "Linkedin"
                        });
                });

            modelBuilder.Entity("Portfolio.Entities.Concrete.Specialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IconName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("TotalProject")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Specializations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 26, 23, 57, 13, 939, DateTimeKind.Local).AddTicks(8157),
                            Description = "I build website go live with Framer, Webflow or WordPress",
                            IconName = "las la-code",
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Development",
                            TotalProject = "4 Projects"
                        });
                });

            modelBuilder.Entity("Portfolio.Entities.Concrete.Testimonial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Testimonials", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 9, 26, 23, 57, 13, 939, DateTimeKind.Local).AddTicks(9922),
                            Degree = "Bilgisayar Mühendisi",
                            Description = "\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book\"",
                            FullName = "Berkay Akar",
                            IsActive = true,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 9, 26, 23, 57, 13, 939, DateTimeKind.Local).AddTicks(9925),
                            Degree = "Unity Developer",
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            FullName = "Nihat Ovalıoğlu",
                            IsActive = true,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Portfolio.Entities.Concrete.MenuHeader", b =>
                {
                    b.HasOne("Portfolio.Entities.Concrete.Menu", "Menu")
                        .WithMany("MenuHeaders")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Portfolio.Entities.Concrete.Menu", b =>
                {
                    b.Navigation("MenuHeaders");
                });
#pragma warning restore 612, 618
        }
    }
}
